# Pre-commit hooks for code quality automation
# Install: uv run pre-commit install
# Run manually: uv run pre-commit run --all-files
# Update hooks: uv run pre-commit autoupdate

repos:
  # General file formatting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
      - id: end-of-file-fixer
        name: Ensure files end with newline
      - id: mixed-line-ending
        args: ['--fix=lf']
        name: Normalize line endings
      - id: check-yaml
        name: Check YAML syntax
      - id: check-json
        name: Check JSON syntax
      - id: check-toml
        name: Check TOML syntax
      - id: check-added-large-files
        args: ['--maxkb=1000']
        name: Prevent large files
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-case-conflict
        name: Check for case conflicts

  # Black - Code formatting (110 char line length)
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        name: Format code with Black
        language_version: python3

  # Ruff - Linting and auto-fixes
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.7.4
    hooks:
      - id: ruff
        name: Lint with Ruff
        args: [--fix, --exit-non-zero-on-fix]

# Configuration notes:
# - Mypy and pytest are excluded as they're too slow for pre-commit hooks
# - Run those in CI/CD instead (see .github/workflows/quality.yml)
# - Hooks run only on staged files for speed (<2 seconds typical)
# - To bypass hooks: git commit --no-verify
