name: Code Quality

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main

jobs:
  format-check:
    name: Code Formatting (Black)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync

      - name: Check formatting with Black
        run: uv run black --check src/ tests/

  lint:
    name: Linting (Ruff)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync

      - name: Lint with Ruff
        run: uv run ruff check src/ tests/

  type-check:
    name: Type Checking (Mypy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync

      - name: Type check with Mypy
        run: uv run mypy src/

  test-with-coverage:
    name: Tests with Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync

      - name: Run tests with coverage
        run: |
          uv run pytest --cov=src --cov-report=term-missing --cov-report=xml --cov-fail-under=60
        continue-on-error: false

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        if: always()
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  quality-summary:
    name: Quality Summary
    runs-on: ubuntu-latest
    needs: [format-check, lint, type-check, test-with-coverage]
    if: always()
    steps:
      - name: Check all jobs passed
        run: |
          if [ "${{ needs.format-check.result }}" != "success" ] || \
             [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.type-check.result }}" != "success" ] || \
             [ "${{ needs.test-with-coverage.result }}" != "success" ]; then
            echo "❌ One or more quality checks failed"
            exit 1
          fi
          echo "✅ All quality checks passed"
